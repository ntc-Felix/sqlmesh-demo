apiVersion: apps/v1
kind: Deployment
metadata:
  name: git-sync-example
spec:
  replicas: 1
  selector:
    matchLabels:
      app: git-sync-example
  template:
    metadata:
      labels:
        app: git-sync-example
    spec:
      securityContext:
        fsGroup: 101
      volumes:
        - name: content-from-git
          emptyDir: {}
      containers:
        - name: git-sync
          image: k8s.gcr.io/git-sync:v3.1.2
          args:
            - --repo=https://github.com/ntc-Felix/sqlmesh-demo.git
            - --depth=1
            - --wait=5
            - --dest=current
            - --root=/git
          volumeMounts:
            - name: content-from-git
              mountPath: /git
          readinessProbe:
            exec:
              command:
                - stat
                - /git/current/sqlmesh
          lifecycle:
            #postStart:
            #  exec:
            #    command:
            #      - sh
            #      - -c
            #      - |
            #        sleep 10
            #        kubectl delete pod -n your-namespace $(kubectl get pods -n sqlmesh -l app=git-sync-example -o name)
        - name: sqlmesh
          image: sqlmesh:0.8.1-test-7
          ports:
            - containerPort: 8000
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONTAINER_NAME
              value: sqlmesh
            - name: GITSYNC_ENV
              value: git/current/sqlmesh
          readinessProbe:
            exec:
              command:
                - stat
                - /git/current/sqlmesh
          volumeMounts:
            - name: content-from-git
              mountPath: /git
              readOnly: false
